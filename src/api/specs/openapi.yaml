openapi: 3.0.3
info:
  title: Filemeto API
  version: 1.0.0
  description: API for managing users and their posts

paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: A user
    put:
      summary: Update a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '204':
          description: User deleted

  /posts:
    get:
      summary: Get all posts
      responses:
        '200':
          description: A list of posts
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Post created

  /posts/{id}:
    get:
      summary: Get a post by ID
      parameters:
        - $ref: '#/components/parameters/PostId'
      responses:
        '200':
          description: A post
    put:
      summary: Update a post
      parameters:
        - $ref: '#/components/parameters/PostId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: Post updated
    delete:
      summary: Delete a post
      parameters:
        - $ref: '#/components/parameters/PostId'
      responses:
        '204':
          description: Post deleted

components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    PostId:
      name: id
      in: path
      required: true
      schema:
        type: integer

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    UserInput:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string

    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        userId:
          type: integer
    PostInput:
      type: object
      required:
        - title
        - content
        - userId
      properties:
        title:
          type: string
        content:
          type: string
        userId:
          type: integer
